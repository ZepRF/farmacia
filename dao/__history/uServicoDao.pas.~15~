unit uServicoDao;

interface

uses
  uPadraoDao, uServicoModel, uProcedimentoModel,uServicoProcedimentoModel, System.SysUtils, System.Generics.Collections;

type

  TServicoDao = class(TPadraoDao)
  private
    procedure salvarProcedimentos(listServicosProcedimentos:Tlist<TServicoProcedimentoModel>; idServico:Integer);
  public
    function salvar(model:TServicoModel):Boolean;
  end;

implementation

{ TServicoDao }

function TServicoDao.salvar(model: TServicoModel): Boolean;
var
  vIdServico:Integer;
begin
  Result := True;
  try
    vIdServico := nextId('SERVICOS');
    query.Close;
    query.SQL.Text := 'INSERT INTO SERVICOS(ID, DATA, FARMACEUTICO, PACIENTE, VALOR_TOTAL, OBSERVACOES ) ' +
                      '              VALUES(:ID, :DATA, :FARMACEUTICO, :PACIENTE, :VALOR_TOTAL, :OBSERVACOES)';
    query.ParamByName('ID').Value := vIdServico;
    query.ParamByName('DATA').Value := model.data;
    query.ParamByName('FARMACEUTICO').Value := model.farmaceutico;
    query.ParamByName('PACIENTE').Value := model.paciente;
    query.ParamByName('VALOR_TOTAL').Value := model.valorTotal;
    query.ParamByName('OBSERVACOES').Value := model.observacoes;
    query.ExecSQL;

    model.id := vIdServico;


  except
    Result := false;
  end;
end;


procedure TServicoDao.salvarProcedimentos(listServicosProcedimentos:Tlist<TServicoProcedimentoModel>);
var
  model:TServicoProcedimentoModel;
begin
  try
    for model in listServicosProcedimentos do
    begin
      query.Close;
      query.SQL.Text := ' INSERT INTO SERVICOS_PROCEDIMENTOS(ID,ID_SERVICO,ID_PROCEDIMENTO ) ' +
                        ' VALUES(ID,ID_SERVICO,ID_PROCEDIMENTO) ';
      query.ParamByName('ID').Value := nextId('SERVICOS_PROCEDIMENTOS');
      query.ParamByName('ID_SERVICO').Value := model.idServico;
      query.ParamByName('ID_PROCEDIMENTO').Value := model.procedimento.id;    
      query.ExecSQL;    
    end;    
  except 
    on E: Exception do
      raise Exception.Create(e.Message);
  end;
end;

end.
