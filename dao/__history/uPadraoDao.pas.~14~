unit uPadraoDao;

interface

uses
  uDMDataBase,System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.Phys.MySQL,
  FireDAC.Phys.MySQLDef, FireDAC.VCLUI.Wait, Data.DB, FireDAC.Comp.Client,
  FireDAC.Stan.Param, FireDAC.DatS, FireDAC.DApt.Intf, FireDAC.DApt,
  FireDAC.Comp.DataSet;

type

  TPadraoDao = class
  private
    Fquery: TFDQuery;
    function getQuery:TFDQuery;
  public
    constructor Create;
    destructor Destroy; override;
    property query:TFDQuery read getQuery;
    function nextId(tabela:string):Integer;

  end;

implementation

{ TPadraoDao }

constructor TPadraoDao.Create;
begin
  inherited;
  dmDataBase.FDConexao.Connected := True;
end;

destructor TPadraoDao.Destroy;
begin
  FreeAndNil(Fquery);
  inherited;
end;

function TPadraoDao.getQuery:TFDQuery;
begin
  if not Assigned(Fquery) then
  begin
    Fquery := TFDQuery.Create(nil);
    Fquery.Connection := dmDataBase.FDConexao;
  end;

  Result := Fquery;
end;

function TPadraoDao.nextId(tabela: string): Integer;
begin
  query.Close;
  query.SQL.Text := 'SELECT coalesce(MAX(id),0) + 1 FROM ' + tabela;
  query.Open;
  Result := query.Fields[0].Value;
end;

end.
